---
# - name: Create cluster
#   ecs_cluster:
#     name: "{{ ecs_cluster_name }}"
#     state: present
#     aws_access_key: "{{ vault_access_key }}"
#     aws_secret_key: "{{ vault_secret_key }}"
#     region: "{{ aws_region }}"
#   register: cluster_var

# - name: Create IAM Role for ECS
#   iam_role:
#     name: "{{ aws_iam }}"
#     assume_role_policy_document: "{{ lookup('file','policy.json') }}"
#     managed_policy:
#       - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
#     state: present

# - name: Launch EC2 instance
#   ec2:
#     image: ami-007ef488b3574da6b
#     instance_type: t2.micro
#     key_name: "{{ my_key }}"
#     vpc_subnet_id: "{{ vpc }}"
#     wait: true
#     group_id: sg-0bad191055634fbfa
#     exact_count: 1
#     count_tag:
#       class: application
#     instance_tags:
#       class: application
#     instance_profile_name: "{{ aws_iam }}"
#     aws_access_key: "{{ vault_access_key }}"
#     aws_secret_key: "{{ vault_secret_key }}"
#     region: "{{ aws_region }}"
#     user_data: |
#                 #!/bin/bash
#                 sudo chown -R ec2-user /etc/ecs &&
#                 echo ECS_CLUSTER={{cluster_var.cluster.clusterName}} >> /etc/ecs/ecs.config


- name: Wait for instance join to ECS cluster
  ecs_cluster:
    name: "{{ ecs_cluster_name }}"
    state: has_instances
    delay: 10
    repeat: 30
    aws_access_key: "{{ vault_access_key }}"
    aws_secret_key: "{{ vault_secret_key }}"
    region: "{{ aws_region }}"

# - name: create taskdefinition for app
#   ecs_taskdefinition:
#     containers:
#       - name: app
#         image: "{{ image_name }}"
#         cpu: 10
#         memory: 200
#     family: app
#     state: present
#     launch_type: "EC2"

- name: Run task
  community.aws.ecs_task:
    operation: run
    cluster: "{{ ecs_cluster_name }}"
    task_definition: app
    count: 1
    started_by: ansible_user
  register: task_output
